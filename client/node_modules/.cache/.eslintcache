[{"/home/santiago/React/ensolvers-challenge/client/src/index.js":"1","/home/santiago/React/ensolvers-challenge/client/src/App.js":"2","/home/santiago/React/ensolvers-challenge/client/src/context/GlobalState.jsx":"3","/home/santiago/React/ensolvers-challenge/client/src/context/GlobalReducer.jsx":"4","/home/santiago/React/ensolvers-challenge/client/src/api/index.js":"5","/home/santiago/React/ensolvers-challenge/client/src/pages/Todos.jsx":"6","/home/santiago/React/ensolvers-challenge/client/src/pages/Login.jsx":"7","/home/santiago/React/ensolvers-challenge/client/src/components/Navbar.jsx":"8","/home/santiago/React/ensolvers-challenge/client/src/components/NewTodoInput.jsx":"9","/home/santiago/React/ensolvers-challenge/client/src/components/TodoList.jsx":"10","/home/santiago/React/ensolvers-challenge/client/src/components/NewFolderInput.jsx":"11","/home/santiago/React/ensolvers-challenge/client/src/components/TodoItem.jsx":"12","/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx":"13","/home/santiago/React/ensolvers-challenge/client/src/components/FolderItem.jsx":"14"},{"size":413,"mtime":1645028325254,"results":"15","hashOfConfig":"16"},{"size":492,"mtime":1645028586718,"results":"17","hashOfConfig":"16"},{"size":2910,"mtime":1645094973996,"results":"18","hashOfConfig":"16"},{"size":1273,"mtime":1645094929046,"results":"19","hashOfConfig":"16"},{"size":1481,"mtime":1645036573770,"results":"20","hashOfConfig":"16"},{"size":599,"mtime":1645047515884,"results":"21","hashOfConfig":"16"},{"size":1635,"mtime":1645029427146,"results":"22","hashOfConfig":"16"},{"size":1579,"mtime":1645043558298,"results":"23","hashOfConfig":"16"},{"size":2031,"mtime":1645047797029,"results":"24","hashOfConfig":"16"},{"size":936,"mtime":1645045845698,"results":"25","hashOfConfig":"16"},{"size":1198,"mtime":1645037432942,"results":"26","hashOfConfig":"16"},{"size":1166,"mtime":1645094909938,"results":"27","hashOfConfig":"16"},{"size":997,"mtime":1645047551113,"results":"28","hashOfConfig":"16"},{"size":1190,"mtime":1645047497732,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1tu418j",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"33"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"33"},"/home/santiago/React/ensolvers-challenge/client/src/index.js",[],[],["80","81"],"/home/santiago/React/ensolvers-challenge/client/src/App.js",[],[],"/home/santiago/React/ensolvers-challenge/client/src/context/GlobalState.jsx",[],[],"/home/santiago/React/ensolvers-challenge/client/src/context/GlobalReducer.jsx",[],[],"/home/santiago/React/ensolvers-challenge/client/src/api/index.js",[],[],"/home/santiago/React/ensolvers-challenge/client/src/pages/Todos.jsx",["82"],[],"import NewTodoInput from \"../components/NewTodoInput\";\nimport NewFolderInput from \"../components/NewFolderInput\";\nimport TodoList from \"../components/TodoList\";\nimport FolderList from \"../components/FolderList\";\n\nconst Todos = () => {\n  return (\n    <div className=\"todosPage\">\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <NewTodoInput />\n        </div>\n        <div className=\"container\">\n          <NewFolderInput />\n        </div>\n        <div className=\"container\">\n          <FolderList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Todos;\n","/home/santiago/React/ensolvers-challenge/client/src/pages/Login.jsx",["83"],[],"import { useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState'\nimport { Container, Group, Image, Title } from '@mantine/core';\nimport Logo from \"../images/logo.png\"\nimport { GoogleLogin } from 'react-google-login';\nimport { useNavigate } from \"react-router-dom\"\n\nconst Login = () => {\n    const { googleLogin } = useContext(GlobalContext);\n    const navigate = useNavigate();\n  \n    const googleSuccess = (res) => {\n      const token = res?.tokenId;\n      googleLogin(token, navigate);\n      navigate(\"/todos\")\n    } \n\n    const googleFailure = () => {\n        console.log(\"Google auth failed\");\n      }\n\n      return (\n        <div className=\"loginPage\">\n          <Group direction=\"column\" styles={(theme) => ({\n            root: {\n              width: \"500px\",\n              height: \"500px\",\n              backgroundColor: \"white\",\n              borderRadius: \"5px\",\n              padding: \"15px\",\n              alignItems: \"center\",\n              justifyContent: \"space-around\",\n    \n              '@media (max-width: 800px)': {\n                width: \"300px\",\n              },\n            },\n          })}>\n            <div>\n              <Image alt=\"Logo\" src={Logo} width={100} withPlaceholder />\n              <Title order={1}>TODOS</Title >\n            </div>\n            <GoogleLogin\n              clientId={process.env.REACT_APP_CLIENT_ID}\n              buttonText=\"Login with Google\"\n              onSuccess={googleSuccess}\n              onFailure={googleFailure}\n              cookiePolicy={'single_host_origin'}\n            />\n          </Group >\n        </div>\n      )\n}\n\nexport default Login;","/home/santiago/React/ensolvers-challenge/client/src/components/Navbar.jsx",["84"],[],"import React, { useContext, useEffect, useState } from 'react';\nimport { Avatar, Button, Group, Navbar, Title } from \"@mantine/core\"\nimport { GoogleLogout } from \"react-google-login\";\nimport Logo from \"../images/logo.png\";\nimport { GlobalContext } from '../context/GlobalState';\nimport { useNavigate } from 'react-router-dom';\n\nconst NavBar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\") || \"{}\"));\n  const { logout } = useContext(GlobalContext);\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    logout(navigate);\n  };\n\n  useEffect(() => {\n    setUser(JSON.parse(localStorage.getItem(\"profile\") || \"{}\"));\n    return () => { setUser({}) }\n  }, []);\n\n  return (\n    <header className=\"header\">\n      <div>\n        <Avatar radius=\"xl\" src={Logo} alt=\"Logo\"/>\n      </div>\n      <Title order={2} style={{ color: \"#fff\" }} className=\"app-name\">Expense Tracker</Title>\n      <Group>\n        <Avatar\n          alt={user?.result?.sub}\n          src={user?.result?.picture}\n          radius=\"xl\"\n          className=\"avatar\"\n        />\n        <GoogleLogout\n          clientId={process.env.REACT_APP_CLIENT_ID}\n          buttonText=\"Logout\"\n          onLogoutSuccess={handleLogout}\n          render={(renderProps) => (\n            <Button\n              variant=\"white\" color=\"gray\"\n              onClick={renderProps.onClick}\n              disabled={renderProps.disabled}\n            >\n              LOG OUT\n            </Button>\n          )}\n        ></GoogleLogout>\n      </Group>\n    </header>)\n};\n\nexport default NavBar;\n","/home/santiago/React/ensolvers-challenge/client/src/components/NewTodoInput.jsx",[],["85"],"/home/santiago/React/ensolvers-challenge/client/src/components/TodoList.jsx",["86"],["87"],"import { useContext, useEffect } from 'react';\nimport { GlobalContext } from \"../context/GlobalState\"\nimport { Group, Loader, ScrollArea } from '@mantine/core';\nimport TodoItem from './TodoItem';\n\nconst TodoList = () => {\n  const { getTodos, todos, isLoading} = useContext(GlobalContext);\n\n  useEffect(() => {\n    getTodos();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Group spacing=\"xs\" position=\"center\" styles={(theme) => ({\n      root: {\n        overflow: \"auto\",\n        height: \"100%\"\n      }\n    })}>\n      {!isLoading ?\n          <Group spacing=\"xs\" styles={(theme) => ({\n            root: {\n              width: \"100%\",\n            }\n          })}>\n            {todos.map((todo) => (\n              <TodoItem key={todo.id} {...todo} />\n            ))}\n          </Group>\n        : <Loader color=\"gray\" variant=\"bars\" size=\"md\" />\n      }\n    </Group>\n  );\n\n}\n\nexport default TodoList;\n","/home/santiago/React/ensolvers-challenge/client/src/components/NewFolderInput.jsx",["88","89"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Select, TextInput } from \"@mantine/core\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst NewFolderInput = () => {\n  const { addFolder } = useContext(GlobalContext);\n  const [folder, setFolder] = useState(\"\");\n\n  const submitFolder = (e) => {\n    e.preventDefault();\n    const newFolder = {\n      name: folder\n    };\n\n    addFolder(newFolder);\n    setFolder(\"\");\n  };\n  return (\n    <>\n      <form onSubmit={submitFolder} className=\"input\">\n        <TextInput\n          label=\"Add a new folder\"\n          variant=\"filled\"\n          placeholder=\"Work\"\n          value={folder}\n          onChange={(e) => {\n            setFolder(e.currentTarget.value);\n          }}\n        />\n        <Button\n          variant=\"light\"\n          color=\"teal\"\n          type=\"submit\"\n          size=\"sm\"\n          styles={(theme) => ({\n            root: {\n              width: 45,\n              padding: 0,\n              alignSelf: \"flex-end\",\n            },\n          })}\n          {...(!folder && { disabled: true })}\n        >\n          +\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default NewFolderInput;\n","/home/santiago/React/ensolvers-challenge/client/src/components/TodoItem.jsx",["90","91"],[],"/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx",["92","93"],["94"],"import { useContext, useEffect } from 'react';\nimport { GlobalContext } from \"../context/GlobalState\"\nimport { Group, Loader, ScrollArea } from '@mantine/core';\nimport TodoItem from './TodoItem';\nimport FolderItem from './FolderItem';\n\nconst FolderList = () => {\n  const { getFolders, folders, isLoading} = useContext(GlobalContext);\n\n  useEffect(() => {\n    getFolders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Group spacing=\"xs\" position=\"center\" styles={(theme) => ({\n      root: {\n        overflow: \"auto\",\n        height: \"100%\"\n      }\n    })}>\n      {!isLoading ?\n          <Group spacing=\"xs\" styles={(theme) => ({\n            root: {\n              width: \"100%\",\n            }\n          })}>\n            {folders.map((folder) => (\n              <FolderItem key={folder.name} {...folder} />\n            ))}\n          </Group>\n        : <Loader color=\"gray\" variant=\"bars\" size=\"md\" />\n      }\n    </Group>\n  );\n\n}\n\nexport default FolderList;\n","/home/santiago/React/ensolvers-challenge/client/src/components/FolderItem.jsx",["95","96"],[],"import { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Checkbox, Container, Group, Title } from '@mantine/core';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nconst FolderItem = (folder) => {\n  const [completed, setCompleted] = useState(false);\n  const { deleteTodo } = useContext(GlobalContext);\n  const handleDelete = (id) => {\n    deleteTodo(id);\n  }\n\n  return (\n    <Container\n      styles={(theme) => ({\n        root: {\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          borderBottom: \"1px solid #f3c2c2\",\n          padding: \"10px\",\n        },\n      })}\n    >\n      <Group>\n        <Checkbox onChange={(e) => setCompleted(e.target.checked)}></Checkbox>\n        <Title order={5}>{folder.name}</Title>\n      </Group>\n      <a style={{ cursor: \"pointer\" }} onClick={() => handleDelete(folder.id)}>\n        {/* <FontAwesomeIcon style={{ fontSize: \"20px\", color: \"#474747\" }} icon={faTrash} /> */}\n      </a>\n    </Container>\n  );\n};\n\nexport default FolderItem;\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":16},{"ruleId":"101","severity":1,"message":"105","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"106","line":2,"column":33,"nodeType":"103","messageId":"104","endLine":2,"endColumn":39},{"ruleId":"107","severity":1,"message":"108","line":15,"column":6,"nodeType":"109","endLine":15,"endColumn":8,"suggestions":"110","suppressions":"111"},{"ruleId":"101","severity":1,"message":"112","line":3,"column":25,"nodeType":"103","messageId":"104","endLine":3,"endColumn":35},{"ruleId":"107","severity":1,"message":"113","line":12,"column":6,"nodeType":"109","endLine":12,"endColumn":8,"suggestions":"114","suppressions":"115"},{"ruleId":"101","severity":1,"message":"116","line":1,"column":29,"nodeType":"103","messageId":"104","endLine":1,"endColumn":38},{"ruleId":"101","severity":1,"message":"117","line":2,"column":18,"nodeType":"103","messageId":"104","endLine":2,"endColumn":24},{"ruleId":"101","severity":1,"message":"118","line":8,"column":10,"nodeType":"103","messageId":"104","endLine":8,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":31,"column":7,"nodeType":"121","endLine":31,"endColumn":78},{"ruleId":"101","severity":1,"message":"112","line":3,"column":25,"nodeType":"103","messageId":"104","endLine":3,"endColumn":35},{"ruleId":"101","severity":1,"message":"122","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":16},{"ruleId":"107","severity":1,"message":"123","line":13,"column":6,"nodeType":"109","endLine":13,"endColumn":8,"suggestions":"124","suppressions":"125"},{"ruleId":"101","severity":1,"message":"118","line":8,"column":10,"nodeType":"103","messageId":"104","endLine":8,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":31,"column":7,"nodeType":"121","endLine":31,"endColumn":80},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'TodoList' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Navbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'foldersSelect' and 'getFolders'. Either include them or remove the dependency array.","ArrayExpression",["128"],["129"],"'ScrollArea' is defined but never used.","React Hook useEffect has a missing dependency: 'getTodos'. Either include it or remove the dependency array.",["130"],["131"],"'useEffect' is defined but never used.","'Select' is defined but never used.","'completed' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TodoItem' is defined but never used.","React Hook useEffect has a missing dependency: 'getFolders'. Either include it or remove the dependency array.",["132"],["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"kind":"136","justification":"137"},{"desc":"138","fix":"139"},{"kind":"136","justification":"137"},{"desc":"140","fix":"141"},{"kind":"136","justification":"137"},"Update the dependencies array to be: [foldersSelect, getFolders]",{"range":"142","text":"143"},"directive","","Update the dependencies array to be: [getTodos]",{"range":"144","text":"145"},"Update the dependencies array to be: [getFolders]",{"range":"146","text":"147"},[576,578],"[foldersSelect, getFolders]",[391,393],"[getTodos]",[438,440],"[getFolders]"]