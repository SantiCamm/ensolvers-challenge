{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Accordion, Group, Loader, ScrollArea, Title } from \"@mantine/core\";\nimport TodoItem from \"./TodoItem\";\nimport FolderItem from \"./FolderItem\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FolderList = () => {\n  _s();\n\n  const {\n    getFolders,\n    folders,\n    isLoading,\n    deleteFolder\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    getFolders(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDelete = id => {\n    deleteFolder(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Group, {\n    spacing: \"md\" // position=\"center\"\n    ,\n    styles: theme => ({\n      root: {\n        overflow: \"hidden\",\n        height: \"100%\",\n        borderRadius: \"5px\",\n        padding: \"25px\",\n        // display: \"flex\",\n        // flexDirection: \"column\",\n        gap: \"10px\",\n        width: \"100%\",\n        backgroundColor: \"white\"\n      }\n    }),\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(Accordion, {\n      multiple: true,\n      style: {\n        width: \"100%\"\n      },\n      children: folders === null || folders === void 0 ? void 0 : folders.map(folder => {\n        var _folder$todos;\n\n        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          label: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              order: 4,\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                cursor: \"pointer\"\n              },\n              onClick: () => handleDelete(folder.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                style: {\n                  fontSize: \"20px\",\n                  color: \"#474747\"\n                },\n                icon: faBan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this),\n          children: folder === null || folder === void 0 ? void 0 : (_folder$todos = folder.todos) === null || _folder$todos === void 0 ? void 0 : _folder$todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, { ...todo\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))\n        }, folder.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      color: \"tale\",\n      variant: \"bars\",\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FolderList, \"jy7C/bc+KlXQNDyR/5xF9WOH1vs=\");\n\n_c = FolderList;\nexport default FolderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderList\");","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx"],"names":["useContext","useEffect","GlobalContext","Accordion","Group","Loader","ScrollArea","Title","TodoItem","FolderItem","FontAwesomeIcon","faBan","FolderList","getFolders","folders","isLoading","deleteFolder","handleDelete","id","theme","root","overflow","height","borderRadius","padding","gap","width","backgroundColor","map","folder","display","justifyContent","alignItems","name","cursor","fontSize","color","todos","todo"],"mappings":"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","sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Accordion, Group, Loader, ScrollArea, Title } from \"@mantine/core\";\nimport TodoItem from \"./TodoItem\";\nimport FolderItem from \"./FolderItem\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FolderList = () => {\n  const { getFolders, folders, isLoading, deleteFolder } =\n    useContext(GlobalContext);\n\n  useEffect(() => {\n    getFolders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDelete = (id) => {\n    deleteFolder(id);\n  };\n\n  return (\n    <Group\n      spacing=\"md\"\n      // position=\"center\"\n      styles={(theme) => ({\n        root: {\n          overflow: \"hidden\",\n          height: \"100%\",\n          borderRadius: \"5px\",\n          padding: \"25px\",\n          // display: \"flex\",\n          // flexDirection: \"column\",\n          gap: \"10px\",\n          width: \"100%\",\n          backgroundColor: \"white\"\n        }\n      })}\n    >\n      {!isLoading ? (\n        <Accordion\n          multiple\n          style={{\n            width: \"100%\"\n          }}\n        >\n          {folders?.map((folder) => (\n            <Accordion.Item\n            label={\n              <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>   \n                  <Title order={4}>{folder.name}</Title>\n                  <a\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => handleDelete(folder.id)}\n                  >\n                    <FontAwesomeIcon\n                      style={{ fontSize: \"20px\", color: \"#474747\" }}\n                      icon={faBan}\n                    />\n                  </a>\n                </div>\n              }\n              key={folder.name}\n            >\n              {folder?.todos?.map((todo) => (\n                <TodoItem key={todo.id} {...todo} />\n              ))}\n            </Accordion.Item>\n          ))}\n        </Accordion>\n      ) : (\n        <Loader color=\"tale\" variant=\"bars\" size=\"md\" />\n      )}\n    </Group>\n  );\n};\n\nexport default FolderList;\n"]},"metadata":{},"sourceType":"module"}