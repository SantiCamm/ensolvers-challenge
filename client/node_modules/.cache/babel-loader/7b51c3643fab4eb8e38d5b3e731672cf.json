{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/ensolvers-challenge/client/src/components/TodoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Checkbox, Container, Group, Title, Popover, Button, Text, Textarea } from \"@mantine/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXMark, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = todo => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const {\n    deleteTodo,\n    modifyTodo,\n    completeTodo\n  } = useContext(GlobalContext);\n  const [opened, setOpened] = useState(false);\n  const [toDoText, setToDoText] = useState(todo.text);\n\n  const handleDelete = id => {\n    console.log(id);\n    deleteTodo(id);\n  };\n\n  const handleCompleted = (completed, id) => {\n    setChecked(completed);\n    completeTodo(id, completed);\n  };\n\n  const handleSave = id => {\n    modifyTodo(id, toDoText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    styles: theme => ({\n      root: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        padding: \"5px\",\n        [`@media (max-width: ${760}px)`]: {\n          padding: \"0px\",\n          margin: \"5px 0\"\n        }\n      },\n      sm: {}\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Group, {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: todo.completed,\n        onChange: e => handleCompleted(e.currentTarget.checked, todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        order: 5,\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(Popover, {\n        opened: opened,\n        onClose: () => setOpened(false),\n        target:\n        /*#__PURE__*/\n        // <Button color=\"teal\" onClick={() => setOpened((o) => !o)}>\n        //   Edit\n        // </Button>\n        _jsxDEV(\"a\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: () => handleDelete(todo.id),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            style: {\n              fontSize: \"20px\",\n              color: \"#474747\"\n            },\n            icon: faPen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this),\n        width: 260,\n        position: \"bottom\",\n        withArrow: true,\n        withCloseButton: true,\n        position: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Textarea, {\n            label: \"Edit to do\",\n            placeholder: todo.text,\n            value: toDoText,\n            onChange: e => setToDoText(e.currentTarget.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => handleDelete(todo.id),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              style: {\n                fontSize: \"20px\",\n                color: \"#474747\"\n              },\n              icon: faCircleXMark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"green\",\n            onClick: () => handleSave(todo.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: () => handleDelete(todo.id),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"/JAulYahvBC5BaDy7C7tRvxfpEE=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/components/TodoItem.jsx"],"names":["useContext","useState","GlobalContext","Checkbox","Container","Group","Title","Popover","Button","Text","Textarea","FontAwesomeIcon","faCircleXMark","faPen","TodoItem","todo","checked","setChecked","deleteTodo","modifyTodo","completeTodo","opened","setOpened","toDoText","setToDoText","text","handleDelete","id","console","log","handleCompleted","completed","handleSave","theme","root","width","display","justifyContent","alignItems","padding","margin","sm","e","currentTarget","cursor","fontSize","color","flexDirection","gap","value"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport {\n  Checkbox,\n  Container,\n  Group,\n  Title,\n  Popover,\n  Button,\n  Text,\n  Textarea\n} from \"@mantine/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXMark, faPen } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TodoItem = (todo) => {\n  const [checked, setChecked] = useState(false);\n  const { deleteTodo, modifyTodo, completeTodo } = useContext(GlobalContext);\n  const [opened, setOpened] = useState(false);\n  const [toDoText, setToDoText] = useState(todo.text);\n\n  const handleDelete = (id) => {\n    console.log(id);\n    deleteTodo(id);\n  };\n\n  const handleCompleted = (completed, id) => {\n    setChecked(completed);\n    completeTodo(id, completed);\n  };\n\n  const handleSave = (id) => {\n    modifyTodo(id, toDoText);\n  };\n\n  return (\n    <Container\n      styles={(theme) => ({\n        root: {\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: \"5px\",\n\n          [`@media (max-width: ${760}px)`]: {\n            padding: \"0px\",\n            margin: \"5px 0\"\n          }\n        },\n        sm: {}\n      })}\n    >\n      <Group style={{}}>\n        <Checkbox\n          checked={todo.completed}\n          onChange={(e) => handleCompleted(e.currentTarget.checked, todo.id)}\n        ></Checkbox>\n        <Title order={5}>{todo.text}</Title>\n      </Group>\n      <Group>\n        <Popover\n          opened={opened}\n          onClose={() => setOpened(false)}\n          target={\n            // <Button color=\"teal\" onClick={() => setOpened((o) => !o)}>\n            //   Edit\n            // </Button>\n            <a\n              style={{ cursor: \"pointer\" }}\n              onClick={() => handleDelete(todo.id)}\n            >\n              <FontAwesomeIcon\n                style={{ fontSize: \"20px\", color: \"#474747\" }}\n                icon={faPen}\n              />\n            </a>\n          }\n          width={260}\n          position=\"bottom\"\n          withArrow\n          withCloseButton\n          position=\"top\"\n        >\n          <div\n            style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}\n          >\n            <Textarea\n              label=\"Edit to do\"\n              placeholder={todo.text}\n              value={toDoText}\n              onChange={(e) => setToDoText(e.currentTarget.value)}\n            ></Textarea>\n            <a\n              style={{ cursor: \"pointer\" }}\n              onClick={() => handleDelete(todo.id)}\n            >\n              <FontAwesomeIcon\n                style={{ fontSize: \"20px\", color: \"#474747\" }}\n                icon={faCircleXMark}\n              />\n            </a>\n            <Button color=\"green\" onClick={() => handleSave(todo.id)}>\n              Save\n            </Button>\n          </div>\n        </Popover>\n\n        <a style={{ cursor: \"pointer\" }} onClick={() => handleDelete(todo.id)}>\n          <Button color=\"red\">Delete</Button>\n          {/* <FontAwesomeIcon style={{ fontSize: \"20px\", color: \"#474747\" }} icon={faTrash} /> */}\n        </a>\n      </Group>\n    </Container>\n  );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}