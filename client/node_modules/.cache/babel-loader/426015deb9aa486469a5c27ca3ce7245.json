{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_FOLDER\":\n      return { ...state,\n        folders: [...state.folders, action.payload]\n      };\n\n    case \"DELETE_FOLDER\":\n      return { ...state,\n        folders: state.folders.filter(folder => folder._id !== action.payload._id),\n        todos: state.todos.filter(todo => todo.folder != action.payload.name)\n      };\n\n    case \"GET_FOLDERS\":\n      return { ...state,\n        folders: action.payload,\n        isLoading: false\n      };\n\n    case \"GET_TODOS\":\n      return { ...state,\n        todos: action.payload,\n        isLoading: false\n      };\n\n    case \"ADD_TODO\":\n      return { ...state,\n        todos: [...state.todos, action.payload],\n        folders: [...state.folders, action.payload]\n      };\n\n    case \"DELETE_TODO\":\n      return { ...state,\n        todos: state.todos.filter(todo => todo._id !== action.payload)\n      };\n\n    case \"GOOGLE_LOGIN\":\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action.payload\n      }));\n      return { ...state,\n        authData: {\n          success: true,\n          user: action.payload\n        }\n      };\n\n    case \"LOGOUT\":\n      localStorage.clear();\n      return { ...state,\n        authData: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/context/GlobalReducer.jsx"],"names":["reducer","state","action","type","folders","payload","filter","folder","_id","todos","todo","name","isLoading","localStorage","setItem","JSON","stringify","authData","success","user","clear"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAE,CAAC,GAAGH,KAAK,CAACG,OAAV,EAAmBF,MAAM,CAACG,OAA1B;AAArB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAcE,MAAd,CACNC,MAAD,IAAYA,MAAM,CAACC,GAAP,KAAeN,MAAM,CAACG,OAAP,CAAeG,GADnC,CAFJ;AAKLC,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,CAAYH,MAAZ,CAAoBI,IAAD,IAAUA,IAAI,CAACH,MAAL,IAAeL,MAAM,CAACG,OAAP,CAAeM,IAA3D;AALF,OAAP;;AAOF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGV,KAAL;AAAYG,QAAAA,OAAO,EAAEF,MAAM,CAACG,OAA5B;AAAqCO,QAAAA,SAAS,EAAE;AAAhD,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYQ,QAAAA,KAAK,EAAEP,MAAM,CAACG,OAA1B;AAAmCO,QAAAA,SAAS,EAAE;AAA9C,OAAP;;AACF,SAAK,UAAL;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYQ,QAAAA,KAAK,EAAE,CAAC,GAAGR,KAAK,CAACQ,KAAV,EAAiBP,MAAM,CAACG,OAAxB,CAAnB;AAAqDD,QAAAA,OAAO,EAAE,CAAC,GAAGH,KAAK,CAACG,OAAV,EAAmBF,MAAM,CAACG,OAA1B;AAA9D,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,CAAYH,MAAZ,CAAoBI,IAAD,IAAUA,IAAI,CAACF,GAAL,KAAaN,MAAM,CAACG,OAAjD;AAFF,OAAP;;AAIF,SAAK,cAAL;AACEQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGd,MAAM,CAACG;AAAZ,OAAf,CAAhC;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYgB,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEjB,MAAM,CAACG;AAA9B;AAAtB,OAAP;;AACF,SAAK,QAAL;AACEQ,MAAAA,YAAY,CAACO,KAAb;AACA,aAAO,EAAE,GAAGnB,KAAL;AAAYgB,QAAAA,QAAQ,EAAE;AAAtB,OAAP;;AACF;AACE,aAAOhB,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_FOLDER\":\n      return { ...state, folders: [...state.folders, action.payload] };\n    case \"DELETE_FOLDER\":\n      return {\n        ...state,\n        folders: state.folders.filter(\n          (folder) => folder._id !== action.payload._id\n        ),\n        todos: state.todos.filter((todo) => todo.folder != action.payload.name),\n      };\n    case \"GET_FOLDERS\":\n      return { ...state, folders: action.payload, isLoading: false };\n    case \"GET_TODOS\":\n      return { ...state, todos: action.payload, isLoading: false };\n    case \"ADD_TODO\":\n      return { ...state, todos: [...state.todos, action.payload], folders: [...state.folders, action.payload]};\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo._id !== action.payload),\n      };\n    case \"GOOGLE_LOGIN\":\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action.payload }));\n      return { ...state, authData: { success: true, user: action.payload } };\n    case \"LOGOUT\":\n      localStorage.clear();\n      return { ...state, authData: {} };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}