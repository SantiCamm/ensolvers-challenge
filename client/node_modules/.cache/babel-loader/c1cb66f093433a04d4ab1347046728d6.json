{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/ensolvers-challenge/client/src/components/NewTodoInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { Button, Loader, Select, TextInput } from \"@mantine/core\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodoInput = () => {\n  _s();\n\n  const {\n    addTodo,\n    getFolders,\n    isLoading\n  } = useContext(GlobalContext);\n  const [todo, setTodo] = useState(\"\");\n  const [folder, setFolder] = useState(\"\");\n  useEffect(() => {\n    getFolders(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const {\n    current: foldersSelect\n  } = useRef(useContext(GlobalContext));\n  console.log(current);\n\n  const submitTodo = e => {\n    e.preventDefault();\n    const newTodo = {\n      text: todo,\n      completed: false,\n      folder\n    };\n    addTodo(newTodo);\n    setTodo(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitTodo,\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Add a Todo\",\n        variant: \"filled\",\n        required: true,\n        placeholder: \"Take out the trash\",\n        value: todo,\n        onChange: e => {\n          setTodo(e.currentTarget.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        data: foldersSelect,\n        label: \"Folder\",\n        variant: \"filled\",\n        placeholder: \"Select a folder\",\n        nothingFound: \"Nothing found\",\n        clearable: true // searchable\n        ,\n        required: true,\n        value: folder,\n        onChange: e => setFolder(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        color: \"teal\",\n        type: \"submit\",\n        size: \"sm\",\n        styles: theme => ({\n          root: {\n            width: 45,\n            padding: 0,\n            alignSelf: \"flex-end\"\n          }\n        }),\n        ...(!todo && !folder && {\n          disabled: true\n        }),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      color: \"gray\",\n      variant: \"bars\",\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodoInput, \"gMN69B7r81OzIdyU/MRSEUkefL8=\");\n\n_c = NewTodoInput;\nexport default NewTodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodoInput\");","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/components/NewTodoInput.jsx"],"names":["React","useContext","useEffect","useState","useRef","Button","Loader","Select","TextInput","GlobalContext","NewTodoInput","addTodo","getFolders","isLoading","todo","setTodo","folder","setFolder","current","foldersSelect","console","log","submitTodo","e","preventDefault","newTodo","text","completed","currentTarget","value","theme","root","width","padding","alignSelf","disabled"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { Button, Loader, Select, TextInput } from \"@mantine/core\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst NewTodoInput = () => {\n  const { addTodo, getFolders, isLoading } = useContext(GlobalContext);\n  const [todo, setTodo] = useState(\"\");\n  const [folder, setFolder] = useState(\"\");\n\n  \n  useEffect(() => {\n    getFolders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  const {current: foldersSelect} = useRef(useContext(GlobalContext));\n  console.log(current);\n\n  const submitTodo = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      text: todo,\n      completed: false,\n      folder\n    };\n\n    addTodo(newTodo);\n\n    setTodo(\"\");\n  };\n\n  return (\n    <div>\n      {!isLoading ? (\n        <form onSubmit={submitTodo} className=\"input\">\n          <TextInput\n            label=\"Add a Todo\"\n            variant=\"filled\"\n            required\n            placeholder=\"Take out the trash\"\n            value={todo}\n            onChange={(e) => {\n              setTodo(e.currentTarget.value);\n            }}\n          />\n          <Select\n            data={foldersSelect}\n            label=\"Folder\"\n            variant=\"filled\"\n            placeholder=\"Select a folder\"\n            nothingFound=\"Nothing found\"\n            clearable\n            // searchable\n            required\n            value={folder}\n            onChange={(e) => setFolder(e)}\n          />\n          <Button\n            variant=\"light\"\n            color=\"teal\"\n            type=\"submit\"\n            size=\"sm\"\n            styles={(theme) => ({\n              root: {\n                width: 45,\n                padding: 0,\n                alignSelf: \"flex-end\"\n              }\n            })}\n            {...(!todo && !folder && { disabled: true })}\n          >\n            +\n          </Button>\n        </form>\n      ) : (\n        <Loader color=\"gray\" variant=\"bars\" size=\"md\" />\n      )}\n    </div>\n  );\n};\n\nexport default NewTodoInput;\n"]},"metadata":{},"sourceType":"module"}