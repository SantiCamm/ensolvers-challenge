{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Accordion, Group, Loader, ScrollArea, Title } from \"@mantine/core\";\nimport TodoItem from \"./TodoItem\";\nimport FolderItem from \"./FolderItem\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FolderList = () => {\n  _s();\n\n  const {\n    getFolders,\n    folders,\n    isLoading\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    getFolders(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Group, {\n    spacing: \"xs\" // position=\"center\"\n    ,\n    styles: theme => ({\n      root: {\n        overflow: \"auto\",\n        height: \"100%\",\n        borderRadius: \"5px\",\n        padding: \"25px\",\n        // display: \"flex\",\n        // flexDirection: \"column\",\n        gap: \"10px\",\n        width: \"100%\",\n        backgroundColor: \"white\"\n      }\n    }),\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(Accordion, {\n      multiple: true,\n      style: {\n        width: \"100%\"\n      },\n      children: folders.map(folder => {\n        var _folder$todos;\n\n        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          label: folder.name,\n          children: folder === null || folder === void 0 ? void 0 : (_folder$todos = folder.todos) === null || _folder$todos === void 0 ? void 0 : _folder$todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, { ...todo\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      color: \"gray\",\n      variant: \"bars\",\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FolderList, \"IzvIFXM9FHc1/K9vOsNrzMc1mKk=\");\n\n_c = FolderList;\nexport default FolderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderList\");","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx"],"names":["useContext","useEffect","GlobalContext","Accordion","Group","Loader","ScrollArea","Title","TodoItem","FolderItem","FontAwesomeIcon","faTrash","FolderList","getFolders","folders","isLoading","theme","root","overflow","height","borderRadius","padding","gap","width","backgroundColor","map","folder","name","todos","todo","id"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,KAA/C,QAA4D,eAA5D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAAqCf,UAAU,CAACE,aAAD,CAArD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAC,IADV,CAEE;AAFF;AAGE,IAAA,MAAM,EAAGG,KAAD,KAAY;AAClBC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,MADN;AAEJC,QAAAA,MAAM,EAAE,MAFJ;AAGJC,QAAAA,YAAY,EAAE,KAHV;AAIJC,QAAAA,OAAO,EAAE,MAJL;AAKJ;AACA;AACAC,QAAAA,GAAG,EAAE,MAPD;AAQJC,QAAAA,KAAK,EAAE,MARH;AASJC,QAAAA,eAAe,EAAE;AATb;AADY,KAAZ,CAHV;AAAA,cAiBG,CAACT,SAAD,gBACC,QAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,KAAK,EAAE;AACHQ,QAAAA,KAAK,EAAE;AADJ,OAFT;AAAA,gBAMGT,OAAO,CAACW,GAAR,CAAaC,MAAD;AAAA;;AAAA,4BACX,QAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,KAAK,EAAEA,MAAM,CAACC,IAA9B;AAAA,oBACGD,MADH,aACGA,MADH,wCACGA,MAAM,CAAEE,KADX,kDACG,cAAeH,GAAf,CAAoBI,IAAD,iBAClB,QAAC,QAAD,OAA4BA;AAA5B,aAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH,WAAyCJ,MAAM,CAACI,EAAhD;AAAA;AAAA;AAAA;AAAA,gBADW;AAAA,OAAZ;AANH;AAAA;AAAA;AAAA;AAAA,YADD,gBAgBC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAC,MAA7B;AAAoC,MAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAjCJ;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA9CD;;GAAMlB,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Accordion, Group, Loader, ScrollArea, Title } from \"@mantine/core\";\nimport TodoItem from \"./TodoItem\";\nimport FolderItem from \"./FolderItem\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FolderList = () => {\n  const { getFolders, folders, isLoading } = useContext(GlobalContext);\n\n  useEffect(() => {\n    getFolders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Group\n      spacing=\"xs\"\n      // position=\"center\"\n      styles={(theme) => ({\n        root: {\n          overflow: \"auto\",\n          height: \"100%\",\n          borderRadius: \"5px\",\n          padding: \"25px\",\n          // display: \"flex\",\n          // flexDirection: \"column\",\n          gap: \"10px\",\n          width: \"100%\",\n          backgroundColor: \"white\"\n        }\n      })}\n    >\n      {!isLoading ? (\n        <Accordion\n          multiple\n          style={{\n              width: \"100%\",\n            }}\n        >\n          {folders.map((folder) => (\n            <Accordion.Item label={folder.name} key={folder.id}>\n              {folder?.todos?.map((todo) => (\n                <TodoItem key={todo.id} {...todo} />\n              ))}\n            </Accordion.Item>\n          ))}\n        </Accordion>\n      ) : (\n        <Loader color=\"gray\" variant=\"bars\" size=\"md\" />\n      )}\n    </Group>\n  );\n};\n\nexport default FolderList;\n"]},"metadata":{},"sourceType":"module"}