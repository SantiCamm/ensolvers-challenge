{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/ensolvers-challenge/client/src/components/NewTodoInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Loader, Select, TextInput } from \"@mantine/core\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodoInput = () => {\n  _s();\n\n  const {\n    addTodo,\n    getFolders,\n    folders,\n    isLoading\n  } = useContext(GlobalContext);\n  const [todo, setTodo] = useState(\"\");\n  const [folder, setFolder] = useState(\"\");\n  useEffect(() => {\n    getFolders(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const data = folders === null || folders === void 0 ? void 0 : folders.map(folder => folder.name);\n  console.log(data);\n\n  const submitTodo = e => {\n    e.preventDefault();\n    const newTodo = {\n      text: todo,\n      completed: false,\n      folder\n    };\n    addTodo(newTodo);\n    setTodo(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitTodo,\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Add a Todo\",\n        variant: \"filled\",\n        required: true,\n        placeholder: \"Take out the trash\",\n        value: todo,\n        onChange: e => {\n          setTodo(e.currentTarget.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        data: data,\n        label: \"Folder\",\n        variant: \"filled\",\n        placeholder: \"Select a folder\",\n        nothingFound: \"Nothing found\",\n        clearable: true,\n        searchable: true,\n        required: true,\n        value: folder,\n        onChange: e => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        data: [{\n          value: '1',\n          label: '1'\n        }, {\n          value: '2',\n          label: '1'\n        }],\n        value: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        color: \"teal\",\n        type: \"submit\",\n        size: \"sm\",\n        styles: theme => ({\n          root: {\n            width: 45,\n            padding: 0,\n            alignSelf: \"flex-end\"\n          }\n        }),\n        ...(!todo && !folder && {\n          disabled: true\n        }),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      color: \"gray\",\n      variant: \"bars\",\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodoInput, \"OWpei851nMg+QQkBAa5kD1VUgFQ=\");\n\n_c = NewTodoInput;\nexport default NewTodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodoInput\");","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/components/NewTodoInput.jsx"],"names":["React","useContext","useEffect","useState","Button","Loader","Select","TextInput","GlobalContext","NewTodoInput","addTodo","getFolders","folders","isLoading","todo","setTodo","folder","setFolder","data","map","name","console","log","submitTodo","e","preventDefault","newTodo","text","completed","currentTarget","value","label","theme","root","width","padding","alignSelf","disabled"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Loader, Select, TextInput } from \"@mantine/core\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst NewTodoInput = () => {\n  const { addTodo, getFolders, folders, isLoading } = useContext(GlobalContext);\n  const [todo, setTodo] = useState(\"\");\n  const [folder, setFolder] = useState(\"\");\n\n  useEffect(() => {\n    getFolders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const data = folders?.map((folder) => folder.name);\n  console.log(data)\n\n  const submitTodo = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      text: todo,\n      completed: false,\n      folder\n    };\n\n    addTodo(newTodo);\n\n    setTodo(\"\");\n  };\n\n  return (\n    <div>\n      {!isLoading ? (\n        <form onSubmit={submitTodo} className=\"input\">\n          <TextInput\n            label=\"Add a Todo\"\n            variant=\"filled\"\n            required\n            placeholder=\"Take out the trash\"\n            value={todo}\n            onChange={(e) => {\n              setTodo(e.currentTarget.value);\n            }}\n          />\n          <Select\n            data={data}\n            label=\"Folder\"\n            variant=\"filled\"\n            placeholder=\"Select a folder\"\n            nothingFound=\"Nothing found\"\n            clearable\n            searchable\n            required\n            value={folder}\n            onChange={(e) => {}}\n\n          />\n          <Select data={[{ value: '1', label: '1' }, { value: '2', label: '1' }]} value=\"1\" />\n          <Button\n            variant=\"light\"\n            color=\"teal\"\n            type=\"submit\"\n            size=\"sm\"\n            styles={(theme) => ({\n              root: {\n                width: 45,\n                padding: 0,\n                alignSelf: \"flex-end\"\n              }\n            })}\n            {...((!todo && !folder) && { disabled: true })}\n          >\n            +\n          </Button>\n        </form>\n      ) : (\n        <Loader color=\"gray\" variant=\"bars\" size=\"md\" />\n      )}\n    </div>\n  );\n};\n\nexport default NewTodoInput;\n"]},"metadata":{},"sourceType":"module"}