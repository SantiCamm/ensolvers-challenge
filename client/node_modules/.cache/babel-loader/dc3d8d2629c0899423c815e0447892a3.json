{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Accordion, Group, Loader, ScrollArea } from '@mantine/core';\nimport TodoItem from './TodoItem';\nimport FolderItem from './FolderItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FolderList = () => {\n  _s();\n\n  const {\n    getFolders,\n    folders,\n    isLoading\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    getFolders(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Group, {\n    spacing: \"xs\",\n    position: \"center\",\n    styles: theme => ({\n      root: {// overflow: \"auto\",\n        // height: \"100%\"\n      }\n    }),\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(Accordion, {\n      spacing: \"xs\",\n      styles: theme => ({\n        root: {\n          width: \"100%\"\n        }\n      }),\n      children: folders.map(folder => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        label: folder.name,\n        children: folder.todos.map(todo => /*#__PURE__*/_jsxDEV(Typo, {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      color: \"gray\",\n      variant: \"bars\",\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FolderList, \"cdsbjiFPKBTEOGgTt8pnaPBXc7U=\");\n\n_c = FolderList;\nexport default FolderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderList\");","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx"],"names":["useContext","useEffect","GlobalContext","Accordion","Group","Loader","ScrollArea","TodoItem","FolderItem","FolderList","getFolders","folders","isLoading","theme","root","width","map","folder","name","todos","todo","text"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,UAAnC,QAAqD,eAArD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAAoCZ,UAAU,CAACE,aAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,IAAf;AAAoB,IAAA,QAAQ,EAAC,QAA7B;AAAsC,IAAA,MAAM,EAAGG,KAAD,KAAY;AACxDC,MAAAA,IAAI,EAAE,CACJ;AACA;AAFI;AADkD,KAAZ,CAA9C;AAAA,cAMG,CAACF,SAAD,gBACG,QAAC,SAAD;AAAW,MAAA,OAAO,EAAC,IAAnB;AAAwB,MAAA,MAAM,EAAGC,KAAD,KAAY;AAC1CC,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAE;AADH;AADoC,OAAZ,CAAhC;AAAA,gBAKGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,iBACb,QAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,KAAK,EAAEA,MAAM,CAACC,IAA9B;AAAA,kBACGD,MAAM,CAACE,KAAP,CAAaH,GAAb,CAAkBI,IAAD,iBAAW,QAAC,IAAD;AAAA,oBAAOA,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAA5B;AADH;AAAA;AAAA;AAAA;AAAA,cADC;AALH;AAAA;AAAA;AAAA;AAAA,YADH,gBAYG,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAC,MAA7B;AAAoC,MAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAlBN;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAhCD;;GAAMZ,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import { useContext, useEffect } from 'react';\nimport { GlobalContext } from \"../context/GlobalState\"\nimport { Accordion, Group, Loader, ScrollArea } from '@mantine/core';\nimport TodoItem from './TodoItem';\nimport FolderItem from './FolderItem';\n\nconst FolderList = () => {\n  const { getFolders, folders, isLoading} = useContext(GlobalContext);\n\n  useEffect(() => {\n    getFolders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Group spacing=\"xs\" position=\"center\" styles={(theme) => ({\n      root: {\n        // overflow: \"auto\",\n        // height: \"100%\"\n      }\n    })}>\n      {!isLoading ?\n          <Accordion spacing=\"xs\" styles={(theme) => ({\n            root: {\n              width: \"100%\",\n            }\n          })}>\n            {folders.map((folder) => (\n            <Accordion.Item label={folder.name}>\n              {folder.todos.map((todo) => (<Typo>{todo.text}</Typo>))}\n            </Accordion.Item>\n            ))}\n          </Accordion>\n        : <Loader color=\"gray\" variant=\"bars\" size=\"md\" />\n      }\n    </Group>\n  );\n\n}\n\nexport default FolderList;\n"]},"metadata":{},"sourceType":"module"}