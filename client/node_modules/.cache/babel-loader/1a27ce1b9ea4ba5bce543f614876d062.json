{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Accordion, Group, Loader, ScrollArea, Title } from '@mantine/core';\nimport TodoItem from './TodoItem';\nimport FolderItem from './FolderItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FolderList = () => {\n  _s();\n\n  const {\n    getFolders,\n    folders,\n    isLoading\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    getFolders(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Group, {\n    spacing: \"xs\",\n    position: \"center\",\n    styles: theme => ({\n      root: {// overflow: \"auto\",\n        // height: \"100%\"\n      }\n    }),\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(Accordion, {\n      multiple: true,\n      styles: theme => ({\n        root: {\n          width: \"100%\"\n        }\n      }),\n      children: folders === null || folders === void 0 ? void 0 : folders.map(folder => {\n        var _folder$todos;\n\n        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          label: /*#__PURE__*/_jsxDEV(FolderItem, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 36\n          }, this),\n          children: folder === null || folder === void 0 ? void 0 : (_folder$todos = folder.todos) === null || _folder$todos === void 0 ? void 0 : _folder$todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, { ...todo\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 46\n          }, this))\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      color: \"gray\",\n      variant: \"bars\",\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FolderList, \"cdsbjiFPKBTEOGgTt8pnaPBXc7U=\");\n\n_c = FolderList;\nexport default FolderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderList\");","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/components/FolderList.jsx"],"names":["useContext","useEffect","GlobalContext","Accordion","Group","Loader","ScrollArea","Title","TodoItem","FolderItem","FontAwesomeIcon","faTrash","FolderList","getFolders","folders","isLoading","theme","root","width","map","folder","todos","todo","id"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,KAA/C,QAA4D,eAA5D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAAoCf,UAAU,CAACE,aAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,IAAf;AAAoB,IAAA,QAAQ,EAAC,QAA7B;AAAsC,IAAA,MAAM,EAAGG,KAAD,KAAY;AACxDC,MAAAA,IAAI,EAAE,CACJ;AACA;AAFI;AADkD,KAAZ,CAA9C;AAAA,cAMG,CAACF,SAAD,gBACG,QAAC,SAAD;AAAW,MAAA,QAAQ,MAAnB;AAAoB,MAAA,MAAM,EAAGC,KAAD,KAAY;AACtCC,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAE;AADH;AADgC,OAAZ,CAA5B;AAAA,gBAKGJ,OALH,aAKGA,OALH,uBAKGA,OAAO,CAAEK,GAAT,CAAcC,MAAD;AAAA;;AAAA,4BACd,QAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,KAAK,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAAvB;AAAA,oBACGA,MADH,aACGA,MADH,wCACGA,MAAM,CAAEC,KADX,kDACG,cAAeF,GAAf,CAAoBG,IAAD,iBAAW,QAAC,QAAD,OAA4BA;AAA5B,aAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,kBAA9B;AADH,WAA4CH,MAAM,CAACG,EAAnD;AAAA;AAAA;AAAA;AAAA,gBADc;AAAA,OAAb;AALH;AAAA;AAAA;AAAA;AAAA,YADH,gBAYG,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAC,MAA7B;AAAoC,MAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAlBN;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAhCD;;GAAMX,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import { useContext, useEffect } from 'react';\nimport { GlobalContext } from \"../context/GlobalState\"\nimport { Accordion, Group, Loader, ScrollArea, Title } from '@mantine/core';\nimport TodoItem from './TodoItem';\nimport FolderItem from './FolderItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nconst FolderList = () => {\n  const { getFolders, folders, isLoading} = useContext(GlobalContext);\n\n  useEffect(() => {\n    getFolders();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Group spacing=\"xs\" position=\"center\" styles={(theme) => ({\n      root: {\n        // overflow: \"auto\",\n        // height: \"100%\"\n      }\n    })}>\n      {!isLoading ?\n          <Accordion multiple styles={(theme) => ({\n            root: {\n              width: \"100%\",\n            }\n          })}>\n            {folders?.map((folder) => (\n            <Accordion.Item label={<FolderItem />} key={folder.id}>\n              {folder?.todos?.map((todo) => (<TodoItem key={todo.id} {...todo}/>))}\n            </Accordion.Item>\n            ))}\n          </Accordion>\n        : <Loader color=\"gray\" variant=\"bars\" size=\"md\" />\n      }\n    </Group>\n  );\n\n}\n\nexport default FolderList;\n"]},"metadata":{},"sourceType":"module"}