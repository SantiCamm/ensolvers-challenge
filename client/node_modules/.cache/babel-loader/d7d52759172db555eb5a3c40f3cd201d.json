{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_FOLDERS\":\n      return { ...state,\n        folders: action.payload,\n        isLoading: false,\n        foldersSelect: action.payload.map(folder => folder.name)\n      };\n\n    case \"ADD_FOLDER\":\n      const {\n        newFolder\n      } = action.payload;\n      return { ...state,\n        folders: [...state.folders, newFolder],\n        foldersSelect: [...state.foldersSelect, action.payload]\n      };\n\n    case \"DELETE_FOLDER\":\n      console.log(action.payload);\n      return { ...state,\n        folders: state.folders.filter(folder => folder.id !== action.payload.id),\n        todos: state.todos.filter(todo => todo.folder !== action.payload.name)\n      };\n\n    case \"GET_TODOS\":\n      return { ...state,\n        todos: action.payload,\n        isLoading: false\n      };\n\n    case \"ADD_TODO\":\n      const {\n        newTodo\n      } = action.payload;\n      console.log(...state.folders);\n      console.log(newTodo);\n      return { ...state,\n        todos: [...state.todos, newTodo],\n        folders: state.folders.map(folder => folder.id === newTodo.folderId ? { ...folder,\n          todos: [...folder.todos, newTodo]\n        } : folder)\n      };\n\n    case \"DELETE_TODO\":\n      const {\n        deletedTodo\n      } = action.payload;\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload),\n        folders: state.folders.map(folder => folder.id === deletedTodo.folderId ? { ...folder,\n          todos: state.todos.filter(todo => deletedTodo.id !== todo.id)\n        } : folder)\n      };\n\n    case \"MODIFY_TODO\":\n      const {\n        modifiedTodo\n      } = action.payload;\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === modifiedTodo.id ? modifiedTodo : todo)\n      };\n\n    case \"COMPLETE_TODO\":\n      const {\n        completedTodo\n      } = action.payload;\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === completedTodo.id ? completedTodo : todo)\n      };\n\n    case \"GOOGLE_LOGIN\":\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action.payload\n      }));\n      return { ...state,\n        authData: {\n          success: true,\n          user: action.payload\n        }\n      };\n\n    case \"LOGOUT\":\n      localStorage.clear();\n      return { ...state,\n        authData: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/context/GlobalReducer.jsx"],"names":["reducer","state","action","type","folders","payload","isLoading","foldersSelect","map","folder","name","newFolder","console","log","filter","id","todos","todo","newTodo","folderId","deletedTodo","modifiedTodo","completedTodo","localStorage","setItem","JSON","stringify","authData","success","user","clear"],"mappings":"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","sourcesContent":["const reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_FOLDERS\":\n      return {\n        ...state,\n        folders: action.payload,\n        isLoading: false,\n        foldersSelect: action.payload.map((folder) => folder.name)\n      };\n    case \"ADD_FOLDER\":\n      const { newFolder } = action.payload;\n      return {\n        ...state,\n        folders: [...state.folders, newFolder],\n        foldersSelect: [...state.foldersSelect, action.payload]\n      };\n    case \"DELETE_FOLDER\":\n      console.log(action.payload)\n      return {\n        ...state,\n        folders: state.folders.filter(\n          (folder) => folder.id !== action.payload.id\n        ),\n        todos: state.todos.filter((todo) => todo.folder !== action.payload.name)\n      };\n    case \"GET_TODOS\":\n      return { ...state, todos: action.payload, isLoading: false };\n    case \"ADD_TODO\":\n      const { newTodo } = action.payload;\n      console.log(...state.folders);\n      console.log(newTodo);\n      return {\n        ...state,\n        todos: [...state.todos, newTodo],\n        folders: state.folders.map((folder) =>\n          folder.id === newTodo.folderId\n            ? { ...folder, todos: [...folder.todos, newTodo] }\n            : folder\n        )\n      };\n    case \"DELETE_TODO\":\n      const { deletedTodo } = action.payload;\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload),\n        folders: state.folders.map((folder) =>\n          folder.id === deletedTodo.folderId\n            ? { ...folder, todos: state.todos.filter((todo) => deletedTodo.id !== todo.id) }\n            : folder\n        )\n      };\n    case \"MODIFY_TODO\":\n      const { modifiedTodo } = action.payload;\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === modifiedTodo.id ? modifiedTodo : todo\n        )\n      };\n    case \"COMPLETE_TODO\":\n      const { completedTodo } = action.payload;\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === completedTodo.id ? completedTodo : todo\n        )\n      };\n\n    case \"GOOGLE_LOGIN\":\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action.payload }));\n      return { ...state, authData: { success: true, user: action.payload } };\n    case \"LOGOUT\":\n      localStorage.clear();\n      return { ...state, authData: {} };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}