{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_FOLDERS\":\n      return { ...state,\n        folders: action.payload,\n        isLoading: false,\n        foldersSelect: action.payload.map(folder => folder.name)\n      };\n\n    case \"ADD_FOLDER\":\n      console.log(action.payload);\n      return { ...state,\n        folders: [...state.folders, action.payload],\n        foldersSelect: [...state.foldersSelect, action.payload]\n      };\n\n    case \"DELETE_FOLDER\":\n      return { ...state,\n        folders: state.folders.filter(folder => folder.id !== action.payload.id),\n        todos: state.todos.filter(todo => todo.folder !== action.payload.name)\n      };\n\n    case \"GET_TODOS\":\n      console.log(action.payload);\n      return { ...state,\n        todos: action.payload,\n        isLoading: false\n      };\n\n    case \"ADD_TODO\":\n      return { ...state,\n        todos: [...state.todos, action.payload.newTodo],\n        folders: [...state.folders, action.payload.folders]\n      };\n\n    case \"DELETE_TODO\":\n      return { ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n\n    case \"MODIFY_TODO\":\n      const {\n        modifiedTodo\n      } = action.payload;\n      const index = state.todos.findIndex(e => e.id === modifiedTodo.id);\n      return { ...state,\n        todos: state.todos.map(todo => todo.id === modifiedTodo.id ? todo.text = modifiedTodo.text : todo)\n      };\n\n    case \"GOOGLE_LOGIN\":\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action.payload\n      }));\n      return { ...state,\n        authData: {\n          success: true,\n          user: action.payload\n        }\n      };\n\n    case \"LOGOUT\":\n      localStorage.clear();\n      return { ...state,\n        authData: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/santiago/React/ensolvers-challenge/client/src/context/GlobalReducer.jsx"],"names":["reducer","state","action","type","folders","payload","isLoading","foldersSelect","map","folder","name","console","log","filter","id","todos","todo","newTodo","modifiedTodo","index","findIndex","e","text","localStorage","setItem","JSON","stringify","authData","success","user","clear"],"mappings":"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","sourcesContent":["const reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_FOLDERS\":\n      return {\n        ...state,\n        folders: action.payload,\n        isLoading: false,\n        foldersSelect: action.payload.map((folder) => folder.name)\n      };\n    case \"ADD_FOLDER\":\n      console.log(action.payload);\n      return {\n        ...state,\n        folders: [...state.folders, action.payload],\n        foldersSelect: [...state.foldersSelect, action.payload]\n      };\n    case \"DELETE_FOLDER\":\n      return {\n        ...state,\n        folders: state.folders.filter(\n          (folder) => folder.id !== action.payload.id\n        ),\n        todos: state.todos.filter((todo) => todo.folder !== action.payload.name)\n      };\n    case \"GET_TODOS\":\n      console.log(action.payload);\n      return { ...state, todos: action.payload, isLoading: false };\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [...state.todos, action.payload.newTodo],\n        folders: [...state.folders, action.payload.folders]\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload)\n      };\n    case \"MODIFY_TODO\":\n      const { modifiedTodo } = action.payload;\n      const index = state.todos.findIndex((e) => e.id === modifiedTodo.id);\n\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === modifiedTodo.id\n            ? (todo.text = modifiedTodo.text)\n            : todo\n        )\n      };\n\n    case \"GOOGLE_LOGIN\":\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action.payload }));\n      return { ...state, authData: { success: true, user: action.payload } };\n    case \"LOGOUT\":\n      localStorage.clear();\n      return { ...state, authData: {} };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}